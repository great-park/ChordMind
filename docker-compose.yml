version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chordmind-postgres
    environment:
      POSTGRES_DB: chordmind
      POSTGRES_USER: chordmind_user
      POSTGRES_PASSWORD: chordmind_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chordmind_user -d chordmind"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Rate Limiting
  redis:
    image: redis:7-alpine
    container_name: chordmind-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: chordmind-api-gateway
    ports:
      - "8080:8080"
    env_file:
      - ./backend/api-gateway/env.example
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: chordmind-user-service
    ports:
      - "8081:8081"
    env_file:
      - ./backend/user-service/env.example
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Practice Service
  practice-service:
    build:
      context: ./backend/practice-service
      dockerfile: Dockerfile
    container_name: chordmind-practice-service
    ports:
      - "8082:8082"
    env_file:
      - ./backend/practice-service/env.example
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Feedback Service
  feedback-service:
    build:
      context: ./backend/feedback-service
      dockerfile: Dockerfile
    container_name: chordmind-feedback-service
    ports:
      - "8085:8085"
    env_file:
      - ./backend/feedback-service/env.example
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Service
  ai-service:
    build:
      context: ./backend/ai-service
      dockerfile: Dockerfile
    container_name: chordmind-ai-service
    ports:
      - "8083:8083"
    env_file:
      - ./backend/ai-service/env.example
    environment:
      - DB_HOST=postgres
      - DB_NAME=chordmind
      - DB_USER=chordmind_user
      - DB_PASSWORD=chordmind_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Harmony Service
  harmony-service:
    build:
      context: ./backend/harmony-service
      dockerfile: Dockerfile
    container_name: chordmind-harmony-service
    ports:
      - "8084:8084"
    env_file:
      - ./backend/harmony-service/env.example
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chordmind-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_USER_SERVICE_URL=http://localhost:8081
      - NEXT_PUBLIC_PRACTICE_SERVICE_URL=http://localhost:8082
      - NEXT_PUBLIC_FEEDBACK_SERVICE_URL=http://localhost:8085
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8083
      - NEXT_PUBLIC_HARMONY_SERVICE_URL=http://localhost:8084
      - NEXT_PUBLIC_JWT_SECRET=chordmind-jwt-secret-key-2024-very-long-and-secure
      - NEXT_PUBLIC_ENV=production
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - chordmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  chordmind-network:
    driver: bridge 